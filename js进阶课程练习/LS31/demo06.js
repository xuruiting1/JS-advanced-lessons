//call和apply方法的异同

function.call(obj[,arg1[, arg2[, [,.argN]]]]])

// 调用call的对象必须是个函数function
// call的第一个参数将会是function改变上下文后指向的对象，也就是上面例子里的小刚，也就是上上面例子里的老婆大人，如果不传，将会默认是全局对象window
// 第二个参数开始可以接收任意个参数，这些参数将会作为function的参数传入function
// 调用call的方法会立即执行


//apply()
function.apply(obj[,argArray])
//与call方法的使用基本一致，但是只接收两个参数，其中第二个参数必须是一个数组
//或者类数组，这也是这两个方法很重要的一个区别

// 相同点
// 都能够改变方法的执行上下文（执行环境），将一个对象的方法交给另一个对象来执行，并且是立即执行
// 不同点
// call方法从第二个参数开始可以接收任意个参数，每个参数会映射到相应位置的func的参数上，可以通过参数名调用，
// 但是如果将所有的参数作为数组传入，它们会作为一个整体映射到func对应的第一个参数上，之后参数都为空


//两个方法该如何选择？
// 根据你要传入的参数来做选择，不需要传参或者只有1个参数的时候，用call，当要传入多个对象时，用apply
// 或者，如果需要传入的参数已经是一个数组或者类数组了，就用apply，如果还是单独的需要逐个传入的，可以考虑使用call（如果你不嫌麻烦的话

//还可以用来   对象继承时
//由于可以改变this的指向，所以也就可以实现对象的继承